metrics: 
- data/metrics.json
stages:
  fetch-metadata:
    cmd: python scripts/fetch_eidc_metadata.py ${files.metadata} -s ${sub-sample}
    deps:
    - scripts/fetch_eidc_metadata.py
    outs:
    - ${files.metadata}
  fetch-supporting-docs:
    cmd: python scripts/fetch_supporting_docs.py ${files.metadata} ${files.supporting-docs}
    deps:
    - ${files.metadata}
    - scripts/fetch_supporting_docs.py
    outs:
    - ${files.supporting-docs}
  extract-metadata:
    cmd: python scripts/extract_metadata.py ${files.metadata} ${files.extracted}
    deps:
    - ${files.metadata}
    - scripts/extract_metadata.py
    outs:
    - ${files.extracted}
  chunk-data:
    cmd: >-
      python scripts/chunk_data.py 
      -o ${files.chunked} 
      -c ${hp.chunk-size} 
      -ol ${hp.overlap} 
      ${files.extracted} 
      ${files.supporting-docs} 
      -m ${max-length}
    deps:
    - ${files.extracted}
    - ${files.supporting-docs}
    - scripts/chunk_data.py
    outs:
    - ${files.chunked}
  create-embeddings:
    cmd: python scripts/create_embeddings.py ${files.chunked} ${files.embeddings} -m ${hp.embeddings-model}
    deps:
    - ${files.chunked}
    - scripts/create_embeddings.py
    outs:
    - ${files.embeddings}
  upload-to-docstore:
    cmd: >-
      python scripts/upload_to_docstore.py 
      ${files.embeddings} 
      -o ${doc-store.files} 
      -em ${hp.embeddings-model} 
      -c ${doc-store.collection}
    deps:
    - ${files.embeddings}
    - scripts/upload_to_docstore.py
    outs:
    - ${files.doc-store}
  generate-testset:
    cmd: python scripts/generate_synthetic_testset.py ${files.extracted} ${files.test-set}
    deps: 
    - ${files.extracted}
    - scripts/generate_synthetic_testset.py
    outs: 
    - ${files.test-set}
  run-rag-pipeline:
    cmd: >-
      python scripts/run_rag_pipeline.py 
      -i ${files.test-set} 
      -o ${files.eval-set} 
      -ds ${files.doc-store} 
      -c ${doc-store.collection} 
      -m ${rag.model} 
      -p ${files.pipeline}
    deps:
    - ${files.test-set}
    - ${files.doc-store}
    - scripts/run_rag_pipeline.py
    outs: 
    - ${files.eval-set}
    - ${files.pipeline}
  evaluate:
    cmd: python scripts/evaluate.py ${files.eval-set} -m ${files.metrics} -img ${files.eval-plot}
    deps:
    - ${files.eval-set}
    - scripts/evaluate.py
    outs:
    - ${files.metrics}
    - ${files.eval-plot}
